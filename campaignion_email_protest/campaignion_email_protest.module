<?php
/**
 * @file
 * Code for the campaignion_email_protest feature.
 */

use Drupal\campaignion_wizard\EmailProtestEmailStep;
use Drupal\campaignion_action\Loader;
use Drupal\little_helpers\Webform\Submission;

/**
 * Helper function to check whether a node is a email protest node.
 */
function _campaignion_email_protest_node_is_instance($node) {
  return $node && ($type = Loader::instance()->type($node->type)) && $type->isEmailProtest();
}

/**
 * Implements hook_webform_submission_confirmed().
 *
 * Send the protest email.
 */
function campaignion_email_protest_webform_submission_confirmed(Submission $submission) {
  if (_campaignion_email_protest_node_is_instance($submission->node)) {
    Loader::instance()->actionFromNode($submission->node)->sendEmail($submission);
  }
}

/**
 * Implements hook_theme_registry_alter().
 */
function campaignion_email_protest_theme_registry_alter(&$theme_registry) {
  $theme_registry['webform_mail_headers']['theme path'] = drupal_get_path('module', 'campaignion_email_protest');
  $theme_registry['webform_mail_headers']['function']   = 'campaignion_email_protest_webform_mail_headers';
}

function campaignion_email_protest_webform_mail_headers($variables) {
  $headers = array(
    'X-Mailer' => 'Drupal Webform (PHP/' . phpversion() . ')',
  );
  if (!empty($variables['email']['headers']['X-Mail-Domain'])) {
    $headers['X-Mail-Domain'] = $variables['email']['headers']['X-Mail-Domain'];
  }
  if (!empty($variables['email']['headers']['X-Action-UUID'])) {
    $headers['X-Action-UUID'] = $variables['email']['headers']['X-Action-UUID'];
  }
  return $headers;
}

/**
 * Implements hook_form_builder_palette_groups().
 */
function campaignion_email_protest_form_builder_palette_groups($form_type, $form_id) {
  if ($form_type != 'webform') {
    return;
  }
  $palette = array();
  if (_campaignion_email_protest_node_is_instance(node_load($form_id))) {
    $palette['email_protest'] = array(
      'weight' => -18,
      'title'  => t('Email Protest Data'),
    );
  }
  return $palette;
}

/**
 * Implements hook_form_builder_element_types().
 */
function campaignion_email_protest_form_builder_element_types($form_type, $form_id) {
  if ($form_type != 'webform') {
    return;
  }
  module_load_include('inc', 'form_builder_webform', 'form_builder_webform.components');
  if (_campaignion_email_protest_node_is_instance(node_load($form_id))) {
    $fields['email_subject'] = array(
      'title' => t('Email subject'),
      'weight' => -70,
      'palette_group' => 'email_protest',
      'unique'        => TRUE,
      'properties'    => array('default_value'),
      'default'       => array(
        '#title' => t('Email subject'),
        '#default_value' => '',
      ) + _form_builder_webform_default('textfield'),
    );

    $fields['email_body'] = array(
      'title'  => t('Email body'),
      'weight' => -60,
      'palette_group' => 'email_protest',
      'unique'        => TRUE,
      'properties'    => array('default_value'),
      'default'       => array(
        '#title' => t('Email body'),
        '#default_value' => '',
      ) + _form_builder_webform_default('textarea'),
    );
    return $fields;
  }
}

/**
 * Implements hook_form_builder_element_types_alter().
 */
function campaignion_email_protest_form_builder_element_types_alter(&$types, $form_type, $form_id) {
  if ($form_type != 'webform') {
    return;
  }
  if (_campaignion_email_protest_node_is_instance(node_load($form_id))) {
    $types['protest_target']['palette_group'] = 'email_protest';
    $types['protest_target']['addable'] = TRUE;
  }
}
