<?php

/**
 * @file
 * Hook implementations & callbacks for the campaignion_donation_amount module.
 */

use Drupal\campaignion_donation_amount\FormBuilderElementDonationAmount;
use Drupal\campaignion_donation_amount\Utils;

/**
 * Implements hook_webform_component_info().
 */
function campaignion_donation_amount_webform_component_info() {
  $info['donation_amount'] = [
    'label' => t('Donation amount'),
    'description' => t('Allows a use to specify a donation amount.'),
    'features' => [
      'conditional' => TRUE,
      'conditional_action_set' => TRUE,
      'opt_in' => TRUE,
    ],
    'file' => 'components/donation_amount.php',
    'conditional_type' => 'numeric',
  ];
  return $info;
}

/**
 * Implements hook_form_builder_element_types().
 *
 * Add donation / payment specific types to the donation palette.
 */
function campaignion_donation_form_builder_element_types($form_type, $form_id) {
  if ($form_type != 'webform') {
    return;
  }
  module_load_include('components.inc', 'form_builder_webform');
  $map = _form_builder_webform_property_map('donation_amount');
  // Default value is handled by the form builder element class.
  unset($map['properties']['default_value']);
  $default = _form_builder_webform_default('donation_amount');
  $default['#webform_component']['name'] = t('Donation amount');
  $types['donation_amount'] = [
    'palette_group' => 'donation',
    'title' => t('Donation amount'),
    'class' => FormBuilderElementDonationAmount::class,
    'properties' => array_keys($map['properties']),
    'default' => $default,
  ];
  return $types;
}

/**
 * Implements hook_webform_component_render_alter().
 */
function campaignion_donation_amount_webform_component_render_alter(array &$element, array &$component) {
  if (Utils::isAmountComponent($component)) {
    $info = element_info($element['#type']);
    $element += [
      '#element_validate' => $info['#element_validate'] ?? [],
    ];
    $element['#element_validate'][] = 'campaignion_donation_amount_validate';
    if ($element['#type'] == 'select_or_other') {
      // Always show the select_or_other textfield.
      $element['#attributes']['data-select-or-other-hide'] = 0;
      if ($symbol = variable_get_value('campaignion_donation_amount_currency_symbol')) {
        $element['#other_title'] = $symbol;
        $element['#other_title_display'] = 'before';
      }
    }
  }
}

/**
 * Element validator for donation_amount.
 */
function campaignion_donation_amount_validate($element, &$form_state, $form) {
  $value = &drupal_array_get_nested_value($form_state['values'], $element['#parents']);

  if ($value === NULL) {
    return;
  }

  $num = (int) $value;
  if ((string) $num != $value || $num < 1) {
    form_error($element, t('Please enter a whole-numbered amount of at least 1.'));
  }
}
